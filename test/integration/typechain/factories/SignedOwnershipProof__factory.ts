/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SignedOwnershipProof,
  SignedOwnershipProofInterface,
} from "../SignedOwnershipProof";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "createMessage",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ownershipSigner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "authorizer",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "address",
            name: "nftContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct IForwardRequest.ForwardRequest",
        name: "req",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "verifyOwnershipProof",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506110f4806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806312ce42fd146100465780631a929fb1146100645780639c48439f14610094575b600080fd5b61004e6100c4565b60405161005b9190610bf3565b60405180910390f35b61007e600480360381019061007991906109ca565b6100ed565b60405161008b9190610c6e565b60405180910390f35b6100ae60048036038101906100a99190610a2d565b61021a565b6040516100bb9190610c53565b60405180910390f35b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815250509050806020015142106101e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101d990610d4e565b60405180910390fd5b858585856040516020016101f99493929190610c0e565b60405160208183030381529060405280519060200120915050949350505050565b60008061024161023c85600001518660e00151876060015188608001516100ed565b6102ad565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661028d84836102dd90919063ffffffff16565b73ffffffffffffffffffffffffffffffffffffffff161491505092915050565b6000816040516020016102c09190610bcd565b604051602081830303815290604052805190602001209050919050565b60008060006102ec8585610304565b915091506102f981610387565b819250505092915050565b6000806041835114156103465760008060006020860151925060408601519150606086015160001a905061033a878285856106d8565b94509450505050610380565b60408351141561037757600080602085015191506040850151905061036c8683836107e5565b935093505050610380565b60006002915091505b9250929050565b600060048111156103c1577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8160048111156103fa577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1415610405576106d5565b6001600481111561043f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b816004811115610478577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14156104b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b090610cce565b60405180910390fd5b600260048111156104f3577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81600481111561052c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b141561056d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056490610cee565b60405180910390fd5b600360048111156105a7577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8160048111156105e0577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1415610621576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161061890610d0e565b60405180910390fd5b60048081111561065a577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b816004811115610693577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14156106d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106cb90610d2e565b60405180910390fd5b5b50565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08360001c11156107135760006003915091506107dc565b601b8560ff161415801561072b5750601c8560ff1614155b1561073d5760006004915091506107dc565b6000600187878787604051600081526020016040526040516107629493929190610c89565b6020604051602081039080840390855afa158015610784573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156107d3576000600192509250506107dc565b80600092509250505b94509492505050565b60008060007f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60001b841690506000601b60ff8660001c901c6108289190610de0565b9050610836878288856106d8565b935093505050935093915050565b600061085761085284610d93565b610d6e565b90508281526020810184848401111561086f57600080fd5b61087a848285610e95565b509392505050565b60008135905061089181611090565b92915050565b600082601f8301126108a857600080fd5b81356108b8848260208601610844565b91505092915050565b600061012082840312156108d457600080fd5b6108df610120610d6e565b905060006108ef84828501610882565b600083015250602061090384828501610882565b602083015250604061091784828501610882565b604083015250606061092b84828501610882565b606083015250608061093f848285016109b5565b60808301525060a0610953848285016109b5565b60a08301525060c0610967848285016109b5565b60c08301525060e061097b848285016109b5565b60e08301525061010082013567ffffffffffffffff81111561099c57600080fd5b6109a884828501610897565b6101008301525092915050565b6000813590506109c4816110a7565b92915050565b600080600080608085870312156109e057600080fd5b60006109ee87828801610882565b94505060206109ff878288016109b5565b9350506040610a1087828801610882565b9250506060610a21878288016109b5565b91505092959194509250565b60008060408385031215610a4057600080fd5b600083013567ffffffffffffffff811115610a5a57600080fd5b610a66858286016108c1565b925050602083013567ffffffffffffffff811115610a8357600080fd5b610a8f85828601610897565b9150509250929050565b610aa281610e36565b82525050565b610ab181610e48565b82525050565b610ac081610e54565b82525050565b610ad7610ad282610e54565b610ed5565b82525050565b6000610aea601883610dc4565b9150610af582610f4e565b602082019050919050565b6000610b0d601f83610dc4565b9150610b1882610f77565b602082019050919050565b6000610b30601c83610dd5565b9150610b3b82610fa0565b601c82019050919050565b6000610b53602283610dc4565b9150610b5e82610fc9565b604082019050919050565b6000610b76602283610dc4565b9150610b8182611018565b604082019050919050565b6000610b99600f83610dc4565b9150610ba482611067565b602082019050919050565b610bb881610e7e565b82525050565b610bc781610e88565b82525050565b6000610bd882610b23565b9150610be48284610ac6565b60208201915081905092915050565b6000602082019050610c086000830184610a99565b92915050565b6000608082019050610c236000830187610a99565b610c306020830186610baf565b610c3d6040830185610a99565b610c4a6060830184610baf565b95945050505050565b6000602082019050610c686000830184610aa8565b92915050565b6000602082019050610c836000830184610ab7565b92915050565b6000608082019050610c9e6000830187610ab7565b610cab6020830186610bbe565b610cb86040830185610ab7565b610cc56060830184610ab7565b95945050505050565b60006020820190508181036000830152610ce781610add565b9050919050565b60006020820190508181036000830152610d0781610b00565b9050919050565b60006020820190508181036000830152610d2781610b46565b9050919050565b60006020820190508181036000830152610d4781610b69565b9050919050565b60006020820190508181036000830152610d6781610b8c565b9050919050565b6000610d78610d89565b9050610d848282610ea4565b919050565b6000604051905090565b600067ffffffffffffffff821115610dae57610dad610f0e565b5b610db782610f3d565b9050602081019050919050565b600082825260208201905092915050565b600081905092915050565b6000610deb82610e7e565b9150610df683610e7e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610e2b57610e2a610edf565b5b828201905092915050565b6000610e4182610e5e565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b82818337600083830152505050565b610ead82610f3d565b810181811067ffffffffffffffff82111715610ecc57610ecb610f0e565b5b80604052505050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f45434453413a20696e76616c6964207369676e61747572650000000000000000600082015250565b7f45434453413a20696e76616c6964207369676e6174757265206c656e67746800600082015250565b7f19457468657265756d205369676e6564204d6573736167653a0a333200000000600082015250565b7f45434453413a20696e76616c6964207369676e6174757265202773272076616c60008201527f7565000000000000000000000000000000000000000000000000000000000000602082015250565b7f45434453413a20696e76616c6964207369676e6174757265202776272076616c60008201527f7565000000000000000000000000000000000000000000000000000000000000602082015250565b7f53657373696f6e20457870697265640000000000000000000000000000000000600082015250565b61109981610e36565b81146110a457600080fd5b50565b6110b081610e7e565b81146110bb57600080fd5b5056fea2646970667358221220de6163fa648aa8b580a44535beca30440fc10e7a494e3536711d039b9f35e2fd64736f6c63430008040033";

export class SignedOwnershipProof__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SignedOwnershipProof> {
    return super.deploy(overrides || {}) as Promise<SignedOwnershipProof>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SignedOwnershipProof {
    return super.attach(address) as SignedOwnershipProof;
  }
  connect(signer: Signer): SignedOwnershipProof__factory {
    return super.connect(signer) as SignedOwnershipProof__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SignedOwnershipProofInterface {
    return new utils.Interface(_abi) as SignedOwnershipProofInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SignedOwnershipProof {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as SignedOwnershipProof;
  }
}
